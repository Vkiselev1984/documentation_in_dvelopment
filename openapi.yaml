openapi: 3.0.0
info:
  title: NoteKeeper API
  version: 1.1.0
servers:
  - url: http://localhost:4000
paths:
  /api/posts:
    get:
      summary: Get all posts
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Add a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Created post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /api/posts/{id}:
    put:
      summary: Edit a post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Updated post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      summary: Delete a post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
  /api/categories:
    get:
      summary: Get all categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Add a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Created category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /api/categories/{id}:
    put:
      summary: Edit a category
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Updated category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      summary: Delete a category
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
  /api/images:
    get:
      summary: Get all images
      responses:
        '200':
          description: List of images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
    post:
      summary: Add a new image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '201':
          description: Created image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /api/images/{postId}:
    get:
      summary: Get images for a post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: List of images for a post
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
    delete:
      summary: Delete an image
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
  /api/upload:
    post:
      summary: Upload an image for a post
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Image uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageUrl:
                    type: string
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        categoryId:
          type: string
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        color:
          type: string
        icon:
          type: string
        description:
          type: string
    Image:
      type: object
      properties:
        id:
          type: string
        postId:
          type: string
        imageUrl:
          type: string
